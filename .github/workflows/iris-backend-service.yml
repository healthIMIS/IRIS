name: backend-service Develop

on:
  push:
    branches:
      - main
    paths:
      - iris-backend-service/**
      - .github/workflows/iris-backend-service.yml

jobs:
  # https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'

      - name: Cache local Maven repository
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: build, package and publish the image
        run: >
          mvn -B clean verify spring-boot:build-image -am -pl iris-backend-service
          -Dspring-boot.build-image.publish=true
          -Dversion.tag="develop"
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
          DOCKER_HUB_PW: ${{ secrets.DOCKER_HUB_PW }}
          
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: |
            **/surefire-reports/*.xml
            **/failsafe-reports/*.xml
            !**/failsafe-reports/failsafe-summary.xml

  publish-test-results:
    name: Publish Test Results
    needs: build
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: test-reports
          path: reports

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: reports/**/*.xml
          report_individual_runs: true
          check_run_annotations_branch: "*"

  container_scan:
    needs: build
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'inoeg/iris-backend-service:develop'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '1'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          
      - name: Show Trivy vulnerability errors
        uses: aquasecurity/trivy-action@master
        if: failure()
        with:
          image-ref: 'inoeg/iris-backend-service:develop'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM'
