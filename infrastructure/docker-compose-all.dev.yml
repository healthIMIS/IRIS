########################################################
# Intended for the all in one staging environment on the VM 
# 
# provides a NGINX server with certificates and configuration for staging.iris-gateway.de
# togehter with the IRIS applications and with a Postgresql database and SORMAS
# DB: look at docker-compose-postgres.yml
# SORMAS: port = /; look at docker-compose-sormas.base.yml
# IRIS public: port = /
# IRIS location: port = /
# IRIS client: port = /; look at docker-compose-hd-client.base.yml
# IRIS frontend: port = /; look at docker-compose-hd-client.base.yml
# NGINX: port = 443
########################################################
version: '3'
services:
  postgres:
    extends:
      file: docker-compose-postgres.yml
      service: postgres

  sormas:
    extends:
      file: docker-compose-sormas.base.yml
      service: sormas
    depends_on:
      postgres:
        condition: service_healthy

  iris-public:
    image: inoeg/iris-public-server:${IRIS_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 8443
    env_file:
      - iris-gateway.env
    # do not work on Strato machine
    #    mem_limit: ${IRIS_PUBLIC_MEM}
    #    mem_reservation: ${IRIS_PUBLIC_MEM_RESERVED}
    restart: unless-stopped

  iris-location:
    image: inoeg/iris-backend-service:${IRIS_VERSION}
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker

  ls-1:
    image: inoeg/eps-server
    depends_on:
      iris-client:
        condition: service_started
    volumes:
      - "/home/iris/infrastructure/eps/settings/dev/settings:/app/settings"
    environment:
      - EPS_SETTINGS=settings/dev/roles/ls-1
    command: [ "--level debug server run" ]

  iris-client:
    extends:
      file: docker-compose-hd-client.base.yml
      service: iris-client
    depends_on:
      postgres:
        condition: service_healthy
      sormas:
        condition: service_healthy
      iris-public:
        condition: service_started
      iris-location:
        condition: service_started
    environment:
      - EPS-CLIENT_CLIENTURL=https://ls-1:5556/jsonrpc

  hd-1:
    image: inoeg/eps-server
    depends_on:
      iris-client:
        condition: service_started
    volumes:
      - "/home/iris/infrastructure/eps/settings/dev/settings:/app/settings"
    environment:
      - EPS_SETTINGS=settings/dev/roles/hd-1
    command: [ "--level debug server run" ]

  iris-frontend:
    extends:
      file: docker-compose-hd-client.base.yml
      service: iris-frontend
    depends_on:
      - iris-client

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: with-sormas-dev.Dockerfile
    ports:
      - 9443:443
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
    depends_on:
      iris-location:
        condition: service_started
      iris-public:
        condition: service_started
      sormas:
        condition: service_healthy
      iris-client:
        condition: service_started

  iris-app-api-demo:
    image: inoeg/iris-app-api-demo:${IRIS_VERSION}
    depends_on:
      iris-location:
        condition: service_started
      nginx:
        condition: service_started
    expose:
      - 8091
    restart: unless-stopped

  iris-app-api-demo-eps:
    image: inoeg/eps-server
    depends_on:
      iris-app-api-demo:
        condition: service_started
    volumes:
      - "/home/iris/infrastructure/eps/settings/dev/settings:/app/settings"
    environment:
      - EPS_SETTINGS=settings/dev/roles/demo-app
    command: [ "--level debug server run" ]


volumes:
  psqldata_iris: 
