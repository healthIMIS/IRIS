########################################################
# Intended for local execution by developers and testers 
# 
# provides full IRIS environment together with a Postgresql database and SORMAS
# DB: look at docker-compose-postgres.yml
# SORMAS: port = 6080; look at docker-compose-sormas.base.yml
# IRIS public: port = 8443
# IRIS location: port = 8080
# IRIS client: port = 8092; look at docker-compose-hd-client.base.yml
# IRIS frontend: port = 28080; look at docker-compose-hd-client.base.yml
########################################################
version: '3'
services:
  postgres:
    extends:
      file: docker-compose-postgres.yml
      service: postgres

  sormas:
    extends:
      file: docker-compose-sormas.base.yml
      service: sormas
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 6080:6080
      - 6081:6081
      - 6048:6048
  
  iris-public:
    image: inoeg/iris-public-server:${IRIS_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8443:8443
# do not work on Strato machine
#    mem_limit: ${IRIS_PUBLIC_MEM}
#    mem_reservation: ${IRIS_PUBLIC_MEM_RESERVED}
    restart: unless-stopped

  iris-location:
    image: inoeg/iris-location-service:${IRIS_VERSION}
    ports:
      - 8080:8080
    restart: unless-stopped

  iris-client:
    extends:
      file: docker-compose-hd-client.base.yml
      service: iris-client
    depends_on:
      postgres:
        condition: service_healthy
      iris-public: 
        condition: service_started
      iris-location: 
        condition: service_started
    ports:
      - 8092:8092
  
  iris-frontend:
    extends:
      file: docker-compose-hd-client.base.yml
      service: iris-frontend
    ports:
      - 28080:28080
    depends_on:
      - iris-client

  iris-app-api-demo:
    image: inoeg/iris-app-api-demo:${IRIS_VERSION}
    depends_on:
      iris-location:
        condition: service_started
    expose:
      - 8091
    restart: unless-stopped

volumes:
  psqldata_iris: 
