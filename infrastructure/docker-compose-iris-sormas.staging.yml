########################################################
# provides a NGINX server with certificates and configuration for staging.iris-gateway.de
# togehter with the IRIS applications and with a Postgresql database and SORMAS
# DB: look at docker-compose-postgres.yml
# SORMAS: look at docker-compose-sormas.base.yml
# IRIS public: port = 8443
# IRIS location: port = 8080
# IRIS client: port = 8092
# NGINX: port = 443
########################################################
version: '3'
services:
  postgres:
    extends:
      file: docker-compose-postgres.yml
      service: postgres

  sormas:
    extends:
      file: docker-compose-sormas.base.yml
      service: sormas
    depends_on:
      postgres:
        condition: service_healthy

  iris-public:
    image: inoeg/iris-public-server:${IRIS_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 8443
# do not work on Strato machine
#    mem_limit: ${IRIS_PUBLIC_MEM}
#    mem_reservation: ${IRIS_PUBLIC_MEM_RESERVED}
    restart: unless-stopped

  iris-location:
    image: inoeg/iris-location-service:${IRIS_VERSION}
    expose:
      - 8080
    restart: unless-stopped

  iris-client:
    image: inoeg/iris-client-sormas-sidecar:${IRIS_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
      sormas:
        condition: service_healthy
      iris-public: 
        condition: service_started
    expose:
      - 8092
    env_file:
      # you must use this file set the access parameters for SORMAS 
      - iris-sormas.env
#    mem_limit: ${IRIS_CLIENT_MEM}
#    mem_reservation: ${IRIS_CLIENT_MEM_RESERVED}
    restart: unless-stopped

  iris-frontend:
    image: inoeg/iris-client-frontend:${IRIS_FRONTEND_VERSION}
    expose:
      - 28080
    depends_on:
      - iris-client
    restart: unless-stopped

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: with-sormas.Dockerfile
    ports:
      - 443:443
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
    depends_on:
      iris-location:
        condition: service_started
      iris-public:
        condition: service_started
      sormas:
        condition: service_healthy
      iris-client:
        condition: service_started

  iris-app-api-demo:
    image: inoeg/iris-app-api-demo:${IRIS_VERSION}
    depends_on:
      iris-location:
        condition: service_started
      nginx:
        condition: service_started
    expose:
      - 8091
    restart: unless-stopped

volumes:
  psqldata_iris: 
