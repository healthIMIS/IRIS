version: '3'
services:
  postgres:
    build: ./docker/postgres
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    expose:
      - 5432
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_MULTIPLE_DATABASES:
      SORMAS_POSTGRES_PASSWORD:
      SORMAS_POSTGRES_USER:
      SORMAS_DB_NAME:
      SORMAS_DB_NAME_AUDIT:
      TZ:
    volumes:
      - psqldata_iris:/var/lib/postgresql/data
      - ./docker/postgres/pg-init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "psql", "-U", "${SORMAS_POSTGRES_USER}", "-c", "SELECT 1;", "${SORMAS_DB_NAME}" ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s


  sormas:
    restart: unless-stopped
    labels:
      - autoheal=true
      # override for stop timeout seconds during restart
      - autoheal.stop.timeout=30
    image: hzibraunschweig/sormas-application:${SORMAS_DOCKER_VERSION}
    environment:
      - SORMAS_POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - SORMAS_POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - SORMAS_SERVER_URL=${SORMAS_SERVER_URL}
      - DB_HOST=${DB_HOST}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - DB_JDBC_MAXPOOLSIZE=${DB_JDBC_MAXPOOLSIZE}
      - DB_NAME=${SORMAS_DB_NAME}
      - DB_NAME_AUDIT=${SORMAS_DB_NAME_AUDIT}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_FROM=${MAIL_FROM}
      - SORMAS_VERSION=${SORMAS_VERSION}
      - LOCALE=${LOCALE}
      - COUNTRY_NAME=germany
      - EPIDPREFIX=${EPIDPREFIX}
      - SEPARATOR=${SEPARATOR}
      - EMAIL_SENDER_ADDRESS=${EMAIL_SENDER_ADDRESS}
      - EMAIL_SENDER_NAME=${EMAIL_SENDER_NAME}
      - LATITUDE=${LATITUDE}
      - LONGITUDE=${LONGITUDE}
      - MAP_ZOOM=${MAP_ZOOM}
      - TZ=${TZ}
      - JVM_MAX=${APPSERVER_JVM_MAX}
      - GEO_UUID=${GEO_UUID}
      - DEVMODE=${DEVMODE}
      - JSON_LOGGING=${JSON_LOGGING}
      - CUSTOMBRANDING_ENABLED=${CUSTOMBRANDING_ENABLED}
      - CUSTOMBRANDING_NAME=${CUSTOMBRANDING_NAME}
      - CUSTOMBRANDING_LOGO_PATH=${CUSTOMBRANDING_LOGO_PATH}
      - CUSTOMBRANDING_USE_LOGINSIDEBAR=${CUSTOMBRANDING_USE_LOGINSIDEBAR}
      - CUSTOMBRANDING_LOGINBACKGROUND_PATH=${CUSTOMBRANDING_LOGINBACKGROUND_PATH}
      - GEO_TEMPLATE=${GEO_TEMPLATE}
      - GEO_LONG_TEMPLATE=${GEO_LONG_TEMPLATE}
      - GEO_LAT_TEMPLATE=${GEO_LAT_TEMPLATE}
      - CASEARCHIVEDAYS=${CASEARCHIVEDAYS}
      - EVENTARCHIVEDAYS=${EVENTARCHIVEDAYS}
    volumes:
      - ${SORMAS_PATH}/documents:/opt/sormas/documents
      - ${SORMAS_PATH}/custom:/opt/sormas/custom
      - ${SORMAS_PATH}/sormas2sormas:/opt/sormas/sormas2sormas
      - ${SORMAS_PATH}/sormas-logs:/opt/domains/sormas/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:6080/sormas-ui/login" ]
      interval: 30s
      timeout: 7s
      retries: 3
      start_period: 300s

    depends_on:
      postgres:
        condition: service_healthy

  iris-public:
    image: inoeg/iris-public-server:0.0.1-SNAPSHOT
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 8443
    restart: unless-stopped


  iris-location:
    image: inoeg/iris-location-service:0.0.1-SNAPSHOT
    expose:
      - 8080
    restart: unless-stopped

  iris-client:
    image: inoeg/iris-client-sormas-sidecar:0.0.1-SNAPSHOT
    depends_on:
      postgres:
        condition: service_healthy
      sormas:
        condition: service_healthy
      iris-public:
        condition: service_started
    env_file:
      - iris-sormas.env
    restart: unless-stopped

  nginx:
    build:
      ./docker/nginx
    ports:
      - 443:443
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
    depends_on:
      - iris-location
      - iris-public
      - sormas
      - iris-client


volumes:
  psqldata_iris:
  sormas_documents_iris:
  sormas_custom_iris:
  sormas_sormas2sormas_iris:
  sormas_sormas-logs_iris:

