# configuration of the server
server {
    server_name api.staging.iris-gateway.de;
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/staging.iris-gateway.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.iris-gateway.de/privkey.pem;
    ssl_dhparam /etc/letsencrypt/dhparams.pem;


    if ($host != api.staging.iris-gateway.de) {
        return 404;
    }

    proxy_http_version                 1.1;
    proxy_cache_bypass                 $http_upgrade;

    # Proxy headers
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;

    # Proxy timeouts
    proxy_connect_timeout              60s;
    proxy_send_timeout                 60s;
    proxy_read_timeout                 60s;


    ### BEGIN CORS ###

    # This is necessary here, because https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
    # and also, can't have add_headers in an if block.. also can't overwrite the add_headers, only
    # by repetition in the location blocks

    add_header Access-Control-Allow-Origin https://iris.staging.iris-gateway.de;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS"; # todo check back for methods
    add_header Access-Control-Allow-Headers Content-Type;
    add_header Access-Control-Allow-Credentials true; # todo check if we really need credentialed requests
    add_header Access-Control-Max-Age 86400;
    add_header Content-Type "text/plain";
    add_header Content-Length 0;

    # preflight requests
     if ($request_method = OPTIONS) {
        return 204;
     }

     # here we reset the unnecessary headers



    location /data-requests-client/ {
        # These reset anything that was previously added with add_header
        add_header Access-Control-Allow-Origin https://iris.staging.iris-gateway.de;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS"; # todo check back for methods
        add_header Access-Control-Allow-Headers "Content-Type";
        add_header Access-Control-Allow-Credentials true; # todo check if we really need credentialed requests
        add_header Vary origin;
        proxy_pass  http://iris-client:8092;
    }

    location /search {
        add_header Access-Control-Allow-Origin https://iris.staging.iris-gateway.de;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS"; # todo check back for methods
        add_header Access-Control-Allow-Headers "Content-Type";
        add_header Access-Control-Allow-Credentials true; # todo check if we really need credentialed requests
        add_header Vary origin;
        proxy_pass  http://iris-location:8080;
    }

    location /search-index/ {
        add_header Access-Control-Allow-Origin https://iris.staging.iris-gateway.de;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS"; # todo check back for methods
        add_header Access-Control-Allow-Headers "Content-Type";
        add_header Access-Control-Allow-Credentials true; # todo check if we really need credentialed requests
        add_header Vary origin;
        proxy_pass  http://iris-location:8080;
    }

    location / {
        proxy_pass  https://iris-public:8443;
        add_header Access-Control-Allow-Origin https://iris.staging.iris-gateway.de;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS"; # todo check back for methods
        add_header Access-Control-Allow-Headers "Content-Type";
        add_header Access-Control-Allow-Credentials true; # todo check if we really need credentialed requests
        add_header Vary origin;
        # todo
        proxy_ssl_verify off;
    }
}
