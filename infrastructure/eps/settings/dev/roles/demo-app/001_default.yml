name: demo-app
directory:
  type: api
  settings:
    jsonrpc_client:
      tls:
        certificate_file: "$DIR/../../certs/demo-app.crt"
        key_file: "$DIR/../../certs/demo-app.key"
        ca_certificate_files: [ "$DIR/../../certs/root.crt" ]
    ca_certificate_files: [ "$DIR/../../certs/root.crt" ]
    endpoints: [ "https://iris.staging.iris-gateway.de:3322/jsonrpc" ]
    server_names: [ "sd-1" ]
channels: # defines all the channels that we want to open when starting the server
  - name: main gRPC server # accepts incoming gRPC connections to deliver and receive messages
    type: grpc_server
    settings:
      bind_address: "0.0.0.0:4444"
      tls:
        ca_certificate_files: [ "$DIR/../../certs/root.crt" ]
        certificate_file: "$DIR/../../certs/demo-app.crt"
        key_file: "$DIR/../../certs/demo-app.key"
  - name: main JSON-RPC client # creates outgoing JSONRPC connections to deliver and receive messages
    type: jsonrpc_client
    settings:
      endpoint: http://iris-app-api-demo:8091/data-request-rpc
  - name: main gRPC client # creates outgoing gRPC connections to deliver and receive messages
    type: grpc_client
    settings:
      tls:
        ca_certificate_files: [ "$DIR/../../certs/root.crt" ]
        certificate_file: "$DIR/../../certs/demo-app.crt"
        key_file: "$DIR/../../certs/demo-app.key"
  - name: main JSON-RPC server # accepts incoming JSONRPC connections to deliver and receive messages
    type: jsonrpc_server
    settings:
      bind_address: "0.0.0.0:5554"
      tls:
        ca_certificate_files: [ "$DIR/../../certs/root.crt" ]
        certificate_file: "$DIR/../../certs/demo-app.crt"
        key_file: "$DIR/../../certs/demo-app.key"
        verify_client: false
