apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iris-gateway.locations-eps" . }}
  labels:
    {{- include "iris-gateway.locations-labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "iris-gateway.locations-eps-labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "iris-gateway.locations-eps-labels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/locations-eps/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: location
          image: {{ .Values.eps.image }}:{{ .Values.epsRepoTag }}
          imagePullPolicy: {{ include "iris-gateway.pullPolicy" . }}
          args: [--level, trace, server, run]
          ports:
            - name: grpc
              containerPort: {{ .Values.nodePorts.locationsEps }}
              protocol: TCP
          volumeMounts:
            - mountPath: {{ .Values.tls.mountPath }}
              name: tls
              readOnly: true
            - mountPath: /config
              name: config
              readOnly: true
          env:
            - name: EPS_SETTINGS
              value: {{ .Values.eps.configMountPath }}/settings.yml
            - name: METRICS_ENABLED
              value: 'true'
      volumes:
        - name: tls
          secret:
            secretName: {{ .Values.tls.secretName }}
        - name: config
          configMap:
            name: {{ include "iris-gateway.locations-eps" . }}
