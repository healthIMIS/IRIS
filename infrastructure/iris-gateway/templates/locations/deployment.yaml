apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iris-gateway.locations" . }}
  labels:
    {{- include "iris-gateway.locations-labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "iris-gateway.locations-labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "iris-gateway.locations-labels" . | nindent 8 }}
    spec:
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: location
          image: {{ .Values.locations.image }}:{{ .Values.locations.tag }}
          imagePullPolicy: {{ include "iris-gateway.pullPolicy" . }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: postgres
            - name: POSTGRES_DATABASE
              value: {{ .Values.postgresqlha.postgresql.database }}
            - name: IRIS_ALERTS_SLACK_TOKEN
              value: {{ .Values.locations.slack.token }}
            - name: IRIS_ALERTS_SLACK_CHANNEL
              value: {{ .Values.locations.slack.channel }}
            - name: IRIS_ALERTS_ZAMMAD_TOKEN
              value: {{ .Values.locations.zammad.token }}
            - name: IRIS_ALERTS_ZAMMAD_APIADDRESS
              value: {{ .Values.locations.zammad.apiaddress }}
            - name: IRIS_ALERTS_ZAMMAD_ENVIRONMENT
              value: {{ .Values.locations.zammad.environment }}
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_BACKEND_DIRECTORY_ROOT
              value: {{ .Values.locations.storageDir }}
          envFrom:
            - secretRef:
                name: {{ include "iris-gateway.locations-postgres" . }}
          livenessProbe:
            httpGet:
              port: {{ .Values.locations.port }}
              path: /actuator/health/liveness
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              port: {{ .Values.locations.port }}
              path: /actuator/health/readiness
            initialDelaySeconds: 20
            timeoutSeconds: 5
          ports:
            - name: http
              containerPort: {{ .Values.locations.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: {{ .Values.locations.storageDir }}
              name: persistent-storage
          securityContext:
            runAsNonRoot: true
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ include "iris-gateway.locations" . }}-index
